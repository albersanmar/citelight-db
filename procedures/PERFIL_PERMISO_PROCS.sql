SET TERM ^ ;

CREATE OR ALTER PROCEDURE CTLIGHT_SET_PERFIL_PERMISO (
	P_PERFIL_PERMISO_KEY INTEGER,
	P_PERMISO_KEY INTEGER,
	P_PERFIL_KEY INTEGER,
	P_ESTATUS_LINK INTEGER
)
RETURNS (
	PERFIL_PERMISO_KEY INTEGER,
	RESULTADO INTEGER,
	MSG VARCHAR(100)
)
AS
DECLARE VARIABLE V_PERFIL_PERMISO_KEY INTEGER;
DECLARE VARIABLE V_CODE INTEGER;
DECLARE VARIABLE V_MSG VARCHAR(100);
BEGIN
	V_CODE = 0;
	V_MSG = '';
	V_PERFIL_PERMISO_KEY = 0;

	IF (:P_PERFIL_PERMISO_KEY = 0) THEN
	BEGIN
		INSERT INTO PERFIL_PERMISO (PERMISO_LINK, PERFIL_LINK, ESTATUS_LINK)
		VALUES (:P_PERMISO_KEY, :P_PERFIL_KEY, :P_ESTATUS_LINK)
		RETURNING PERFIL_PERMISO_KEY INTO :V_PERFIL_PERMISO_KEY;
	END
	ELSE IF (:P_PERFIL_PERMISO_KEY > 0) THEN
	BEGIN
		IF (NOT EXISTS(SELECT PERFIL_PERMISO_KEY
				FROM PERFIL_PERMISO
				WHERE (PERFIL_PERMISO_KEY = :P_PERFIL_PERMISO_KEY))) THEN
		BEGIN
			V_MSG = 'No existe un registro con este key';
		END
		UPDATE PERFIL_PERMISO
		SET PERMISO_LINK = :P_PERMISO_KEY,
			PERFIL_LINK = :P_PERFIL_KEY,
			ESTATUS_LINK = :P_ESTATUS_LINK
		WHERE PERFIL_PERMISO_KEY = :P_PERFIL_PERMISO_KEY;
	END
	IF (ROW_COUNT > 0) THEN
	BEGIN
		V_CODE = 1;
		V_MSG = 'Información guardada correctamente';
	END
	ELSE
	BEGIN
		V_CODE = 0;
		V_MSG = 'No se pudo guardar la información';
	END

	RESULTADO = V_CODE;
	PERFIL_PERMISO_KEY = V_PERFIL_PERMISO_KEY;
	MSG = V_MSG;
	SUSPEND;
END^

CREATE OR ALTER PROCEDURE CTLIGHT_DEL_PERFIL_PERMISO (
	P_PERFIL_PERMISO_KEY INTEGER
)
RETURNS (
	PERFIL_PERMISO_KEY INTEGER,
	RESULTADO INTEGER,
	MSG VARCHAR(100)
)
AS
DECLARE VARIABLE V_PERFIL_PERMISO_KEY INTEGER;
DECLARE VARIABLE V_CODE INTEGER;
DECLARE VARIABLE V_MSG VARCHAR(100);
BEGIN
	V_CODE = 0;
	V_MSG = '';
	V_PERFIL_PERMISO_KEY = 0;

	IF (NOT EXISTS(SELECT PERFIL_PERMISO_KEY
			FROM PERFIL_PERMISO
			WHERE (PERFIL_PERMISO_KEY = :P_PERFIL_PERMISO_KEY))) THEN    
	BEGIN
		V_MSG = 'No existe un registro con este key';
	END

	UPDATE PERFIL_PERMISO
	SET ESTATUS_LINK = 2
	WHERE PERFIL_PERMISO_KEY = :P_PERFIL_PERMISO_KEY;
	IF (ROW_COUNT > 0) THEN
	BEGIN
		V_CODE = 1;
		V_MSG = 'Registro eliminado correctamente';
	END
	ELSE
	BEGIN
		V_CODE = 0;
		V_MSG = 'No se pudo eliminar el registro';
	END
	RESULTADO = V_CODE;
	PERFIL_PERMISO_KEY = V_PERFIL_PERMISO_KEY;
	MSG = V_MSG;
	SUSPEND;
END^

CREATE OR ALTER PROCEDURE CTLIGHT_GET_PERFIL_PERMISO (
	P_PERFIL_PERMISO_KEY INTEGER = 0,
	P_ONLY_ACTIVE SMALLINT = 0
)
RETURNS (
	PERFIL_PERMISO_KEY INTEGER,
	PERMISO_LINK INTEGER,
	PERFIL_LINK INTEGER,
	FECHA_CREACION TIMESTAMP,
	ESTATUS_LINK INTEGER
)
AS
BEGIN
	IF (:P_PERFIL_PERMISO_KEY = 0) THEN
	BEGIN
		-- Retornar listado completo
		FOR
			SELECT PERFIL_PERMISO_KEY, PERMISO_LINK, PERFIL_LINK, FECHA_CREACION, ESTATUS_LINK
			FROM PERFIL_PERMISO
			WHERE (:P_ONLY_ACTIVE = 0 OR ESTATUS_LINK = 1)
			INTO :PERFIL_PERMISO_KEY, :PERMISO_LINK, :PERFIL_LINK, :FECHA_CREACION, :ESTATUS_LINK
		DO
			SUSPEND;
	END
	ELSE IF (:P_PERFIL_PERMISO_KEY > 0) THEN
	BEGIN
		-- Retornar solo un registro específico
		FOR
			SELECT PERFIL_PERMISO_KEY, PERMISO_LINK, PERFIL_LINK, FECHA_CREACION, ESTATUS_LINK
			FROM PERFIL_PERMISO
			WHERE PERFIL_PERMISO_KEY = :P_PERFIL_PERMISO_KEY
			INTO :PERFIL_PERMISO_KEY, :PERMISO_LINK, :PERFIL_LINK, :FECHA_CREACION, :ESTATUS_LINK
		DO
			SUSPEND;
	END
END^

SET TERM ; ^