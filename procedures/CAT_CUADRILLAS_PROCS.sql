SET TERM ^ ;

CREATE OR ALTER PROCEDURE CTLIGHT_SET_CAT_CUADRILLAS (
    P_CUADRILLA_KEY INTEGER,
    P_CLAVE_CUADRILLA VARCHAR(20),
    P_NOMBRE VARCHAR(100),
    P_ESTATUS_LINK INTEGER
)
RETURNS (
    CUADRILLA_KEY INTEGER,
    RESULTADO INTEGER,
    MSG VARCHAR(100)
)
AS
DECLARE VARIABLE V_CUADRILLA_KEY INTEGER;
DECLARE VARIABLE V_CODE INTEGER;
DECLARE VARIABLE V_MSG VARCHAR(100);
BEGIN
    V_CODE = 0;
    V_MSG = '';
    V_CUADRILLA_KEY = 0;

    IF (:P_CUADRILLA_KEY = 0) THEN
    BEGIN
		INSERT INTO CAT_CUADRILLAS (CLAVE_CUADRILLA, NOMBRE, ESTATUS_LINK)
		VALUES (:P_CLAVE_CUADRILLA, :P_NOMBRE, :P_ESTATUS_LINK)
		RETURNING CUADRILLA_KEY INTO :V_CUADRILLA_KEY;
    END
    ELSE IF (:P_CUADRILLA_KEY > 0) THEN
    BEGIN
		IF (NOT EXISTS(SELECT CUADRILLA_KEY
				FROM CAT_CUADRILLAS
				WHERE (CUADRILLA_KEY = :P_CUADRILLA_KEY))) THEN
		BEGIN
			V_MSG = 'No existe un registro con este key';
		END
        UPDATE CAT_CUADRILLAS
        SET NOMBRE = :P_NOMBRE,
            CLAVE_CUADRILLA = :P_CLAVE_CUADRILLA,
            ESTATUS_LINK = :P_ESTATUS_LINK
            WHERE CUADRILLA_KEY = :P_CUADRILLA_KEY;
    END

    IF (ROW_COUNT > 0) THEN
    BEGIN
        V_CODE = 1;
        V_MSG = 'Información guardada correctamente';
    END
    ELSE
    BEGIN
        V_CODE = 0;
        V_MSG = 'No se pudo guardar la información';
    END

    RESULTADO = V_CODE;
    CUADRILLA_KEY = V_CUADRILLA_KEY;
    MSG = V_MSG;
    SUSPEND;
END^

CREATE OR ALTER PROCEDURE CTLIGHT_DEL_CAT_CUADRILLAS (
    P_CUADRILLA_KEY INTEGER
)
RETURNS (
    CUADRILLA_KEY INTEGER,
    RESULTADO INTEGER,
    MSG VARCHAR(100)
)
AS
DECLARE VARIABLE V_CUADRILLA_KEY INTEGER;
DECLARE VARIABLE V_CODE INTEGER;
DECLARE VARIABLE V_MSG VARCHAR(100);
BEGIN
    V_CODE = 0;
    V_MSG = '';
    V_CUADRILLA_KEY = 0;

    IF (NOT EXISTS(SELECT CUADRILLA_KEY
		FROM CAT_CUADRILLAS
		WHERE (CUADRILLA_KEY = :P_CUADRILLA_KEY))) THEN
	BEGIN
		V_MSG = 'No existe un registro con este key';
	END

    UPDATE CAT_CUADRILLAS
    SET ESTATUS_LINK = 2,
        FECHA_MODIFICACION = CURRENT_TIMESTAMP
    WHERE CUADRILLA_KEY = :P_CUADRILLA_KEY;
    IF (ROW_COUNT > 0) THEN
    BEGIN
        V_CODE = 1;
        V_MSG = 'Registro eliminado correctamente';
    END
    ELSE
    BEGIN
        V_CODE = 0;
        V_MSG = 'No se pudo eliminar el registro';
    END
    RESULTADO = V_CODE;
    CUADRILLA_KEY = V_CUADRILLA_KEY;
    MSG = V_MSG;
    SUSPEND;
END^

CREATE OR ALTER PROCEDURE CTLIGHT_GET_CAT_CUADRILLAS (
    P_CUADRILLA_KEY INTEGER = 0,
    P_ONLY_ACTIVE SMALLINT = 0
)
RETURNS (
    CUADRILLA_KEY INTEGER,
    CLAVE_CUADRILLA VARCHAR(20),
    NOMBRE VARCHAR(100),
    FECHA_CREACION TIMESTAMP,
    FECHA_MODIFICACION TIMESTAMP,
    ESTATUS_LINK INTEGER
)
AS
BEGIN
    IF (:P_CUADRILLA_KEY = 0) THEN
    BEGIN
        -- Retornar listado completo
        FOR
            SELECT CUADRILLA_KEY, CLAVE_CUADRILLA, NOMBRE, FECHA_CREACION, FECHA_MODIFICACION, ESTATUS_LINK
            FROM CAT_CUADRILLAS
            WHERE (:P_ONLY_ACTIVE = 0 OR ESTATUS_LINK = 1)
            INTO :CUADRILLA_KEY, :CLAVE_CUADRILLA, :NOMBRE, :FECHA_CREACION, :FECHA_MODIFICACION, :ESTATUS_LINK
        DO
            SUSPEND;
    END
    ELSE IF (:P_CUADRILLA_KEY > 0) THEN
    BEGIN
        -- Retornar solo un registro específico
        FOR
            SELECT CUADRILLA_KEY, CLAVE_CUADRILLA, NOMBRE, FECHA_CREACION, FECHA_MODIFICACION, ESTATUS_LINK
            FROM CAT_CUADRILLAS
            WHERE CUADRILLA_KEY = :P_CUADRILLA_KEY
            INTO :CUADRILLA_KEY, :CLAVE_CUADRILLA, :NOMBRE, :FECHA_CREACION, :FECHA_MODIFICACION, :ESTATUS_LINK
        DO
            SUSPEND;
    END
END^

SET TERM ; ^