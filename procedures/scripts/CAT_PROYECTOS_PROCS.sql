SET TERM ^ ;

CREATE OR ALTER PROCEDURE CTLIGHT_SET_CAT_PROYECTOS (
	P_PROYECTO_KEY INTEGER,
	P_CLAVE_PROYECTO VARCHAR(20),
	P_NOMBRE VARCHAR(200),
	P_DESCRIPCION BLOB SUB_TYPE TEXT,
	P_FECHA_INICIO DATE,
	P_FECHA_FIN DATE,
	P_LATITUD DOUBLE PRECISION,
	P_LONGITUD DOUBLE PRECISION,
	P_ESTATUS_LINK INTEGER
)
RETURNS (
	PROYECTO_KEY INTEGER,
	RESULTADO INTEGER,
	MSG VARCHAR(100)
)
AS
DECLARE VARIABLE V_PROYECTO_KEY INTEGER;
DECLARE VARIABLE V_CODE INTEGER;
DECLARE VARIABLE V_MSG VARCHAR(100);
BEGIN
	V_CODE = 0;
	V_MSG = '';
	V_PROYECTO_KEY = 0;

	IF (:P_PROYECTO_KEY = 0) THEN
	BEGIN
		INSERT INTO CAT_PROYECTOS (CLAVE_PROYECTO, NOMBRE, DESCRIPCION, FECHA_INICIO, FECHA_FIN,
								   LATITUD, LONGITUD, ESTATUS_LINK)
		VALUES (:P_CLAVE_PROYECTO, :P_NOMBRE, :P_DESCRIPCION, :P_FECHA_INICIO, :P_FECHA_FIN,
				:P_LATITUD, :P_LONGITUD, :P_ESTATUS_LINK)
		RETURNING PROYECTO_KEY INTO :V_PROYECTO_KEY;
	END
	ELSE IF (:P_PROYECTO_KEY > 0) THEN
	BEGIN
		IF (NOT EXISTS(SELECT PROYECTO_KEY
				FROM CAT_PROYECTOS
				WHERE (PROYECTO_KEY = :P_PROYECTO_KEY))) THEN
		BEGIN
			V_MSG = 'No existe un registro con este key';
		END
		UPDATE CAT_PROYECTOS
		SET CLAVE_PROYECTO = :P_CLAVE_PROYECTO,
			NOMBRE = :P_NOMBRE,
			DESCRIPCION = :P_DESCRIPCION,
			FECHA_INICIO = :P_FECHA_INICIO,
			FECHA_FIN = :P_FECHA_FIN,
			LATITUD = :P_LATITUD,
			LONGITUD = :P_LONGITUD,
			ESTATUS_LINK = :P_ESTATUS_LINK,
			FECHA_MODIFICACION = CURRENT_TIMESTAMP
		WHERE PROYECTO_KEY = :P_PROYECTO_KEY;
	END
	IF (ROW_COUNT > 0) THEN
	BEGIN
		V_CODE = 1;
		V_MSG = 'Información guardada correctamente';
	END
	ELSE
	BEGIN
		V_CODE = 0;
		V_MSG = 'No se pudo guardar la información';
	END

	RESULTADO = V_CODE;
	PROYECTO_KEY = V_PROYECTO_KEY;
	MSG = V_MSG;
	SUSPEND;
END^

CREATE OR ALTER PROCEDURE CTLIGHT_DEL_CAT_PROYECTOS (
	P_PROYECTO_KEY INTEGER
)
RETURNS (
	PROYECTO_KEY INTEGER,
	RESULTADO INTEGER,
	MSG VARCHAR(100)
)
AS
DECLARE VARIABLE V_PROYECTO_KEY INTEGER;
DECLARE VARIABLE V_CODE INTEGER;
DECLARE VARIABLE V_MSG VARCHAR(100);
BEGIN
	V_CODE = 0;
	V_MSG = '';
	V_PROYECTO_KEY = 0;

	IF (NOT EXISTS(SELECT PROYECTO_KEY
			FROM CAT_PROYECTOS
			WHERE (PROYECTO_KEY = :P_PROYECTO_KEY))) THEN
	BEGIN
		V_MSG = 'No existe un registro con este key';
	END

	UPDATE CAT_PROYECTOS
	SET ESTATUS_LINK = 2,
		FECHA_MODIFICACION = CURRENT_TIMESTAMP
	WHERE PROYECTO_KEY = :P_PROYECTO_KEY;
	IF (ROW_COUNT > 0) THEN
	BEGIN
		V_CODE = 1;
		V_MSG = 'Registro eliminado correctamente';
	END
	ELSE
	BEGIN
		V_CODE = 0;
		V_MSG = 'No se pudo eliminar el registro';
	END
	RESULTADO = V_CODE;
	PROYECTO_KEY = V_PROYECTO_KEY;
	MSG = V_MSG;
	SUSPEND;
END^

CREATE OR ALTER PROCEDURE CTLIGHT_GET_CAT_PROYECTOS (
	P_PROYECTO_KEY INTEGER = 0,
	P_ONLY_ACTIVE SMALLINT = 0
)
RETURNS (
	PROYECTO_KEY INTEGER,
	CLAVE_PROYECTO VARCHAR(20),
	NOMBRE VARCHAR(200),
	DESCRIPCION BLOB SUB_TYPE TEXT,
	FECHA_INICIO DATE,
	FECHA_FIN DATE,
	LATITUD DOUBLE PRECISION,
	LONGITUD DOUBLE PRECISION,
	FECHA_CREACION TIMESTAMP,
	FECHA_MODIFICACION TIMESTAMP,
	ESTATUS_LINK INTEGER
)
AS
BEGIN
	IF (:P_PROYECTO_KEY = 0) THEN
	BEGIN
		FOR
			SELECT PROYECTO_KEY, CLAVE_PROYECTO, NOMBRE, DESCRIPCION, FECHA_INICIO, FECHA_FIN,
				   LATITUD, LONGITUD, FECHA_CREACION, FECHA_MODIFICACION, ESTATUS_LINK
			FROM CAT_PROYECTOS
			WHERE (:P_ONLY_ACTIVE = 0 OR ESTATUS_LINK = 1)
			INTO :PROYECTO_KEY, :CLAVE_PROYECTO, :NOMBRE, :DESCRIPCION, :FECHA_INICIO, :FECHA_FIN,
				 :LATITUD, :LONGITUD, :FECHA_CREACION, :FECHA_MODIFICACION, :ESTATUS_LINK
		DO
			SUSPEND;
	END
	ELSE IF (:P_PROYECTO_KEY > 0) THEN
	BEGIN
		FOR
			SELECT PROYECTO_KEY, CLAVE_PROYECTO, NOMBRE, DESCRIPCION, FECHA_INICIO, FECHA_FIN,
				   LATITUD, LONGITUD, FECHA_CREACION, FECHA_MODIFICACION, ESTATUS_LINK
			FROM CAT_PROYECTOS
			WHERE PROYECTO_KEY = :P_PROYECTO_KEY
			INTO :PROYECTO_KEY, :CLAVE_PROYECTO, :NOMBRE, :DESCRIPCION, :FECHA_INICIO, :FECHA_FIN,
				 :LATITUD, :LONGITUD, :FECHA_CREACION, :FECHA_MODIFICACION, :ESTATUS_LINK
		DO
			SUSPEND;
	END
END^

SET TERM ; ^