SET TERM ^ ;

CREATE OR ALTER PROCEDURE CTLIGHT_SET_CAT_TEMPLATES (
    P_TEMPLATE_KEY INTEGER,
    P_PROYECTO_LINK INTEGER,
    P_ASUNTO VARCHAR(250),
    P_DESCRIPCION VARCHAR(200),
    P_CODIGO TEXT,
    P_ESTATUS_LINK INTEGER
)
RETURNS (
    TEMPLATE_KEY INTEGER,
    RESULTADO INTEGER,
    MSG VARCHAR(100)
)
AS
DECLARE VARIABLE V_TEMPLATE_KEY INTEGER;
DECLARE VARIABLE V_CODE INTEGER;
DECLARE VARIABLE V_MSG VARCHAR(100);
BEGIN
    V_CODE = 0;
    V_MSG = '';
    V_TEMPLATE_KEY = 0;

    IF (:P_TEMPLATE_KEY = 0) THEN
    BEGIN
		INSERT INTO CAT_TEMPLATES (PROYECTO_LINK, ASUNTO, DESCRIPCION, CODIGO, ESTATUS_LINK)
		VALUES (:P_PROYECTO_LINK, :P_ASUNTO, :P_DESCRIPCION, :P_CODIGO, :P_ESTATUS_LINK);
		RETURNING TEMPLATE_KEY INTO :V_TEMPLATE_KEY;
    END
    ELSE IF (:P_TEMPLATE_KEY > 0) THEN
    BEGIN
		IF (NOT EXISTS(SELECT TEMPLATE_KEY
				FROM CAT_TEMPLATES
				WHERE (TEMPLATE_KEY = :P_TEMPLATE_KEY))) THEN
		BEGIN
			V_MSG = 'No existe un registro con este key';
		END
        UPDATE CAT_TEMPLATES
        SET PROYECTO_LINK = :P_PROYECTO_LINK,
            DESCRIPCION_TEMPLATE = :P_DESCRIPCION_TEMPLATE,
            ESTATUS_LINK = :P_ESTATUS_LINK,
            FECHA_MODIFICACION = CURRENT_TIMESTAMP
        WHERE TEMPLATE_KEY = :P_TEMPLATE_KEY;
    END

    IF (ROW_COUNT > 0) THEN
    BEGIN
        V_CODE = 1;
        V_MSG = 'Información guardada correctamente';
    END
    ELSE
    BEGIN
        V_CODE = 0;
        V_MSG = 'No se pudo guardar la información';
    END

    RESULTADO = V_CODE;
    TEMPLATE_KEY = V_TEMPLATE_KEY;
    MSG = V_MSG;
    SUSPEND;
END^

CREATE OR ALTER PROCEDURE CTLIGHT_DEL_CAT_TEMPLATES (
    P_TEMPLATE_KEY INTEGER
)
RETURNS (
    TEMPLATE_KEY INTEGER,
    RESULTADO INTEGER,
    MSG VARCHAR(100)
)
AS
DECLARE VARIABLE V_TEMPLATE_KEY INTEGER;
DECLARE VARIABLE V_CODE INTEGER;
DECLARE VARIABLE V_MSG VARCHAR(100);
BEGIN
    V_CODE = 0;
    V_MSG = '';
    V_TEMPLATE_KEY = 0;

    IF (NOT EXISTS(SELECT TEMPLATE_KEY
		FROM CAT_TEMPLATES
		WHERE (TEMPLATE_KEY = :P_TEMPLATE_KEY))) THEN
	BEGIN
		V_MSG = 'No existe un registro con este key';
	END

    UPDATE CAT_TEMPLATES
    SET ESTATUS_LINK = 2,
        FECHA_MODIFICACION = CURRENT_TIMESTAMP
    WHERE TEMPLATE_KEY = :P_TEMPLATE_KEY;
    IF (ROW_COUNT > 0) THEN
    BEGIN
        V_CODE = 1;
        V_MSG = 'Registro eliminado correctamente';
    END
    ELSE
    BEGIN
        V_CODE = 0;
        V_MSG = 'No se pudo eliminar el registro';
    END
    RESULTADO = V_CODE;
    TEMPLATE_KEY = V_TEMPLATE_KEY;
    MSG = V_MSG;
    SUSPEND;
END^

CREATE OR ALTER PROCEDURE CTLIGHT_GET_CAT_TEMPLATES (
    P_TEMPLATE_KEY INTEGER = 0,
    P_PROYECTO_LINK INTEGER = 0,
    P_ONLY_ACTIVE SMALLINT = 0
)
RETURNS (
    TEMPLATE_KEY INTEGER,
    PROYECTO_LINK INTEGER,
    ASUNTO VARCHAR(250),
    DESCRIPCION VARCHAR(200),
    CODIGO TEXT,
    FECHA_CREACION TIMESTAMP,
    FECHA_MODIFICACION TIMESTAMP,
    ESTATUS_LINK INTEGER
)
AS
BEGIN
    IF (:P_TEMPLATE_KEY = 0) THEN
    BEGIN
        FOR
            SELECT TEMPLATE_KEY, PROYECTO_LINK, ASUNTO, DESCRIPCION, CODIGO, FECHA_CREACION, FECHA_MODIFICACION, ESTATUS_LINK
            FROM CAT_TEMPLATES
            WHERE (:P_ONLY_ACTIVE = 0 OR ESTATUS_LINK = 1)
            INTO :TEMPLATE_KEY, :PROYECTO_LINK, :ASUNTO, :DESCRIPCION, :CODIGO, :FECHA_CREACION, :FECHA_MODIFICACION, :ESTATUS_LINK
        DO
            SUSPEND;
    END
    ELSE IF (:P_TEMPLATE_KEY > 0) THEN
    BEGIN
        FOR
            SELECT TEMPLATE_KEY, PROYECTO_LINK, ASUNTO, DESCRIPCION, CODIGO, FECHA_CREACION, FECHA_MODIFICACION, ESTATUS_LINK
            FROM CAT_TEMPLATES
            WHERE TEMPLATE_KEY = :P_TEMPLATE_KEY
                AND (:P_PROYECTO_LINK = 0 OR PROYECTO_LINK = :P_PROYECTO_LINK)
            INTO :TEMPLATE_KEY, :PROYECTO_LINK, :ASUNTO, :DESCRIPCION, :CODIGO, :FECHA_CREACION, :FECHA_MODIFICACION, :ESTATUS_LINK
        DO
            SUSPEND;
    END
END^

SET TERM ; ^