SET TERM ^ ;

CREATE OR ALTER PROCEDURE CTLIGHT_SET_CAT_USUARIOS (
	P_USUARIOS_KEY INTEGER,
	P_NOMBRE VARCHAR(100),
	P_APELLIDO_PATERNO VARCHAR(100),
	P_APELLIDO_MATERNO VARCHAR(100),
	P_LOGIN VARCHAR(150),
	P_EMAIL VARCHAR(150),
	P_PASSWORD VARCHAR(255),
	P_TOKEN_PASSWORD VARCHAR(500),
	P_CLAVE_USUARIO VARCHAR(20),
	P_ESTATUS_LINK INTEGER
)
RETURNS (
	USUARIOS_KEY INTEGER,
	RESULTADO INTEGER,
	MSG VARCHAR(100)
)
AS
DECLARE VARIABLE V_USUARIOS_KEY INTEGER;
DECLARE VARIABLE V_CODE INTEGER;
DECLARE VARIABLE V_MSG VARCHAR(100);
BEGIN
	V_CODE = 0;
	V_MSG = '';
	V_USUARIOS_KEY = 0;

	IF (:P_USUARIOS_KEY = 0) THEN
	BEGIN
		INSERT INTO CAT_USUARIOS (NOMBRE, APELLIDO_PATERNO, APELLIDO_MATERNO, LOGIN, EMAIL, PASSWORD,
								  TOKEN_PASSWORD, CLAVE_USUARIO, ESTATUS_LINK)
		VALUES (:P_NOMBRE, :P_APELLIDO_PATERNO, :P_APELLIDO_MATERNO, :P_LOGIN, :P_EMAIL, :P_PASSWORD,
				:P_TOKEN_PASSWORD, :P_CLAVE_USUARIO, :P_ESTATUS_LINK)
		RETURNING USUARIOS_KEY INTO :V_USUARIOS_KEY;
	END
	ELSE IF (:P_USUARIOS_KEY > 0) THEN
	BEGIN
		IF (NOT EXISTS(SELECT USUARIOS_KEY
				FROM CAT_USUARIOS
				WHERE (USUARIOS_KEY = :P_USUARIOS_KEY))) THEN
		BEGIN
			V_MSG = 'No existe un registro con este key';
		END
		UPDATE CAT_USUARIOS
		SET NOMBRE = :P_NOMBRE,
			APELLIDO_PATERNO = :P_APELLIDO_PATERNO,
			APELLIDO_MATERNO = :P_APELLIDO_MATERNO,
			LOGIN = :P_LOGIN,
			EMAIL = :P_EMAIL,
			PASSWORD = :P_PASSWORD,
			TOKEN_PASSWORD = :P_TOKEN_PASSWORD,
			CLAVE_USUARIO = :P_CLAVE_USUARIO,
			ESTATUS_LINK = :P_ESTATUS_LINK,
			FECHA_MODIFICACION = CURRENT_TIMESTAMP
			WHERE USUARIOS_KEY = :P_USUARIOS_KEY;
	END
	IF (ROW_COUNT > 0) THEN
	BEGIN
		V_CODE = 1;
		V_MSG = 'Información guardada correctamente';
	END
	ELSE
	BEGIN
		V_CODE = 0;
		V_MSG = 'No se pudo guardar la información';
	END

	RESULTADO = V_CODE;
	USUARIOS_KEY = V_USUARIOS_KEY;
	MSG = V_MSG;
	SUSPEND;
END^

CREATE OR ALTER PROCEDURE CTLIGHT_DEL_CAT_USUARIOS (
	P_USUARIOS_KEY INTEGER
)
RETURNS (
	USUARIOS_KEY INTEGER,
	RESULTADO INTEGER,
	MSG VARCHAR(100)
)
AS	
DECLARE VARIABLE V_USUARIOS_KEY INTEGER;
DECLARE VARIABLE V_CODE INTEGER;
DECLARE VARIABLE V_MSG VARCHAR(100);
BEGIN
	V_CODE = 0;
	V_MSG = '';
	V_USUARIOS_KEY = 0;

	IF (NOT EXISTS(SELECT USUARIOS_KEY
			FROM CAT_USUARIOS
			WHERE (USUARIOS_KEY = :P_USUARIOS_KEY))) THEN
	BEGIN
		V_MSG = 'No existe un registro con este key';
	END

	UPDATE CAT_USUARIOS
	SET ESTATUS_LINK = 2,
		FECHA_MODIFICACION = CURRENT_TIMESTAMP
	WHERE USUARIOS_KEY = :P_USUARIOS_KEY;
	IF (ROW_COUNT > 0) THEN
	BEGIN
		V_CODE = 1;
		V_MSG = 'Registro eliminado correctamente';
	END
	ELSE
	BEGIN
		V_CODE = 0;
		V_MSG = 'No se pudo eliminar el registro';
	END
	RESULTADO = V_CODE;
	USUARIOS_KEY = V_USUARIOS_KEY;
	MSG = V_MSG;
	SUSPEND;
END^

CREATE OR ALTER PROCEDURE CTLIGHT_GET_CAT_USUARIOS (
	P_USUARIOS_KEY INTEGER,
	P_ONLY_ACTIVE SMALLINT = 0
)
RETURNS (
	USUARIOS_KEY INTEGER,
	NOMBRE VARCHAR(100),
	APELLIDO_PATERNO VARCHAR(100),
	APELLIDO_MATERNO VARCHAR(100),
	LOGIN VARCHAR(150),
	EMAIL VARCHAR(150),
	PASSWORD VARCHAR(255),
	TOKEN_PASSWORD VARCHAR(500),
	CLAVE_USUARIO VARCHAR(20),
	FECHA_CREACION TIMESTAMP,
	FECHA_MODIFICACION TIMESTAMP,
	ESTATUS_LINK INTEGER
)
AS
BEGIN
	IF (:P_USUARIOS_KEY = 0) THEN
	BEGIN
		-- Retornar listado completo
		FOR
			SELECT USUARIOS_KEY, NOMBRE, APELLIDO_PATERNO, APELLIDO_MATERNO,
				   LOGIN, EMAIL, PASSWORD, TOKEN_PASSWORD, CLAVE_USUARIO,
				   FECHA_CREACION, FECHA_MODIFICACION, ESTATUS_LINK
			FROM CAT_USUARIOS
			WHERE (:P_ONLY_ACTIVE = 0 OR ESTATUS_LINK = 1)
			INTO :USUARIOS_KEY, :NOMBRE, :APELLIDO_PATERNO, :APELLIDO_MATERNO,
				 :LOGIN, :EMAIL, :PASSWORD, :TOKEN_PASSWORD, :CLAVE_USUARIO,
				 :FECHA_CREACION, :FECHA_MODIFICACION, :ESTATUS_LINK
		DO
			SUSPEND;
	END
	ELSE IF (:P_USUARIOS_KEY > 0) THEN
	BEGIN
		-- Retornar solo un registro específico
		FOR
			SELECT USUARIOS_KEY, NOMBRE, APELLIDO_PATERNO, APELLIDO_MATERNO,
				   LOGIN, EMAIL, PASSWORD, TOKEN_PASSWORD, CLAVE_USUARIO,
				   FECHA_CREACION, FECHA_MODIFICACION, ESTATUS_LINK
			FROM CAT_USUARIOS
			WHERE USUARIOS_KEY = :P_USUARIOS_KEY
			INTO :USUARIOS_KEY, :NOMBRE, :APELLIDO_PATERNO, :APELLIDO_MATERNO,
				 :LOGIN, :EMAIL, :PASSWORD, :TOKEN_PASSWORD, :CLAVE_USUARIO,
				 :FECHA_CREACION, :FECHA_MODIFICACION, :ESTATUS_LINK
		DO
			SUSPEND;
	END
END^

CREATE OR ALTER PROCEDURE CTLIGHT_GET_SESSION_USUARIO (
	P_LOGIN VARCHAR(50),
	P_PASSWORD VARCHAR(500)
)
RETURNS (
	ID INTEGER,
	FULLNAME VARCHAR(200),
	LOGIN VARCHAR(50),
	EMAIL VARCHAR(100),
	STATUS VARCHAR(20),
	RESULTADO INTEGER,
	MSG VARCHAR(100)
)
AS
/*
 * Usuario: Asanchezm
 * Fecha: 26/08/2025
 * Descripción: Obtiene la sesión del usuario

 * Modificaciones:
 * 26/08/2025, Asanchezm, Validación de usuario y contraseña
 */
DECLARE VARIABLE V_PASSWORD VARCHAR(255);
DECLARE VARIABLE V_ESTATUS_LINK INTEGER;
BEGIN
	RESULTADO = 0;
    MSG = '';

    IF (NOT EXISTS(SELECT USUARIOS_KEY FROM CAT_USUARIOS WHERE LOGIN = :P_LOGIN)) THEN
    BEGIN
        MSG = 'El usuario no existe';
        SUSPEND;
        EXIT;
    END

	SELECT PWD, ESTATUS_LINK
    FROM CAT_USUARIOS
    WHERE LOGIN = :P_LOGIN
    INTO :V_PASSWORD, :V_ESTATUS_LINK;

    IF (:V_PASSWORD <> :P_PASSWORD) THEN
    BEGIN
        MSG = 'Contraseña incorrecta';
        SUSPEND;
        EXIT;
    END

	IF (:V_ESTATUS_LINK <> 1) THEN
    BEGIN
        MSG = 'Usuario inactivo';
        SUSPEND;
        EXIT;
    END

	FOR
        SELECT 
            USUARIOS_KEY, 
            NOMBRE || ' ' || APELLIDO_PATERNO || ' ' || COALESCE(APELLIDO_MATERNO, '') AS FULLNAME,
            LOGIN,
            EMAIL,
            ESTATUS_LINK,
            1 AS RESULTADO,
            'Sesión iniciada correctamente' AS MSG
        FROM CAT_USUARIOS
        WHERE LOGIN = :P_LOGIN
        INTO :ID, :FULLNAME, :LOGIN, :EMAIL, :STATUS, :RESULTADO, :MSG
    DO
        SUSPEND;
END^

SET TERM ; ^