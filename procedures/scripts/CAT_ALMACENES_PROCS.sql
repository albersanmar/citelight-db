SET TERM ^ ;

CREATE OR ALTER PROCEDURE CTLIGHT_SET_CAT_ALMACENES (
	P_ALMACEN_KEY INTEGER,
    P_NOMBRE VARCHAR(100),
	P_CLAVE_ALMACEN VARCHAR(20),
	P_ESTATUS_LINK INTEGER
)
RETURNS (
	ALMACEN_KEY INTEGER,
	RESULTADO INTEGER,
	MSG VARCHAR(100)
)
AS
DECLARE VARIABLE V_ALMACEN_KEY INTEGER;
DECLARE VARIABLE V_CODE INTEGER;
DECLARE VARIABLE V_MSG VARCHAR(100);
BEGIN
	V_CODE = 0;
    V_MSG = '';
    V_ALMACEN_KEY = 0;

    IF (:P_ALMACEN_KEY = 0) THEN
    BEGIN
		INSERT INTO CAT_ALMACENES (CLAVE_ALMACEN, NOMBRE, ESTATUS_LINK)
		VALUES (:P_CLAVE_ALMACEN, :P_NOMBRE, :P_ESTATUS_LINK)
		RETURNING ALMACEN_KEY INTO :V_ALMACEN_KEY;
    END
    ELSE IF (:P_ALMACEN_KEY > 0) THEN
    BEGIN
		IF (NOT EXISTS(SELECT ALMACEN_KEY
				FROM CAT_ALMACENES
				WHERE (ALMACEN_KEY = :P_ALMACEN_KEY))) THEN
		BEGIN
			V_MSG = 'No existe un registro con este key';
		END
        UPDATE CAT_ALMACENES
        SET NOMBRE = :P_NOMBRE,
            CLAVE_ALMACEN = :P_CLAVE_ALMACEN,
            ESTATUS_LINK = :P_ESTATUS_LINK
            WHERE ALMACEN_KEY = :P_ALMACEN_KEY;
    END

    IF (ROW_COUNT > 0) THEN
    BEGIN
        V_CODE = 1;
        V_MSG = 'Información guardada correctamente';
    END
    ELSE
    BEGIN
        V_CODE = 0;
        V_MSG = 'No se pudo guardar la información';
    END

    RESULTADO = V_CODE;
    ALMACEN_KEY = V_ALMACEN_KEY;
    MSG = V_MSG;
    SUSPEND;
END^

CREATE OR ALTER PROCEDURE CTLIGHT_DEL_CAT_ALMACENES (
    P_ALMACEN_KEY INTEGER
)
RETURNS (
    ALMACEN_KEY INTEGER,
    RESULTADO INTEGER,
    MSG VARCHAR(100)
)
AS
DECLARE VARIABLE V_ALMACEN_KEY INTEGER;
DECLARE VARIABLE V_CODE INTEGER;
DECLARE VARIABLE V_MSG VARCHAR(100);
BEGIN
    V_CODE = 0;
    V_MSG = '';
    V_ALMACEN_KEY = 0;

    IF (NOT EXISTS(SELECT ALMACEN_KEY
		FROM CAT_ALMACENES
		WHERE (ALMACEN_KEY = :P_ALMACEN_KEY))) THEN
	BEGIN
		V_MSG = 'No existe un registro con este key';
	END

    UPDATE CAT_ALMACENES
    SET ESTATUS_LINK = 2,
        FECHA_MODIFICACION = CURRENT_TIMESTAMP
    WHERE ALMACEN_KEY = :P_ALMACEN_KEY;
    IF (ROW_COUNT > 0) THEN
    BEGIN
        V_CODE = 1;
        V_MSG = 'Registro eliminado correctamente';
    END
    ELSE
    BEGIN
        V_CODE = 0;
        V_MSG = 'No se pudo eliminar el registro';
    END
    RESULTADO = V_CODE;
    ALMACEN_KEY = V_ALMACEN_KEY;
    MSG = V_MSG;
    SUSPEND;
END^

CREATE OR ALTER PROCEDURE CTLIGHT_GET_CAT_ALMACENES (
    P_ALMACEN_KEY INTEGER = 0,
    P_ONLY_ACTIVE SMALLINT = 0
)
RETURNS (
    ALMACEN_KEY INTEGER,
    CLAVE_ALMACEN VARCHAR(20),
    NOMBRE VARCHAR(100),
    FECHA_CREACION TIMESTAMP,
    FECHA_MODIFICACION TIMESTAMP,
    ESTATUS_LINK INTEGER
)
AS
BEGIN
    IF (:P_ALMACEN_KEY = 0) THEN
    BEGIN
        -- Retornar listado completo
        FOR
            SELECT ALMACEN_KEY, CLAVE_ALMACEN, NOMBRE, FECHA_CREACION, FECHA_MODIFICACION, ESTATUS_LINK
            FROM CAT_ALMACENES
            WHERE (:P_ONLY_ACTIVE = 0 OR ESTATUS_LINK = 1)
            INTO :ALMACEN_KEY, :CLAVE_ALMACEN, :NOMBRE, :FECHA_CREACION, :FECHA_MODIFICACION, :ESTATUS_LINK
        DO
            SUSPEND;
    END
    ELSE IF (:P_ALMACEN_KEY > 0) THEN
    BEGIN
        -- Retornar solo un registro específico
        FOR
            SELECT ALMACEN_KEY, CLAVE_ALMACEN, NOMBRE, FECHA_CREACION, FECHA_MODIFICACION, ESTATUS_LINK
            FROM CAT_ALMACENES
            WHERE ALMACEN_KEY = :P_ALMACEN_KEY
            INTO :ALMACEN_KEY, :CLAVE_ALMACEN, :NOMBRE, :FECHA_CREACION, :FECHA_MODIFICACION, :ESTATUS_LINK
        DO
            SUSPEND;
    END
END^

SET TERM ; ^